---
const atUri = `at://did:plc:laqygfbyvnkyuhsuaxmp6ez3/app.bsky.feed.post/3ljphoefymc2l`;
const response = await fetch(
  `https://public.api.bsky.app/xrpc/app.bsky.feed.getPostThread?uri=${encodeURIComponent(atUri)}`
);
const json = await response.json();
// TODO: type
const replies: [
  {
    post: {
      author: {
        displayName: string;
      };
      record: {
        text: string;
      };
    };
  },
] = json.thread.replies;

interface Props {
  postId: string;
}

const { postId } = Astro.props;
// console.log("postId is: ", postId);
---

<style></style>

<ul>
  Post id is: {postId}
  Comments: {
    replies.map((reply) => {
      return (
        <li>
          <p>{reply.post.author.displayName}</p>
          {reply.post.record.text}
        </li>
      );
    })
  }
</ul>

<script is:inline define:vars={{ postId }}>
  console.log("Post comments script running");
  document.addEventListener("astro:after-swap", () => {
    console.log("post comments after swap");
  });

  document.addEventListener("astro:page-load", () => {
    // This runs on first page load and after every navigation.
    console.log("post id is: ", postId);
  });
</script>
